<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://cxf.apache.org/transports/http/configuration
                           http://cxf.apache.org/schemas/configuration/http-conf.xsd
                           http://cxf.apache.org/transports/http-jetty/configuration
                           http://cxf.apache.org/schemas/configuration/http-jetty.xsd
                           http://cxf.apache.org/jaxrs
                           http://cxf.apache.org/schemas/jaxrs.xsd">

    <bean id="properties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <description>Imported configuration data</description>
        <property name="location" value="arguments:" />
    </bean>

    <bean id="pnfs-stub" class="org.dcache.cells.CellStub">
        <description>PnfsManager communication stub</description>
        <property name="destination" value="${dcache.service.pnfsmanager}" />
        <property name="timeout" value="30000" />
        <property name="timeoutUnit" value="MILLISECONDS" />
        <property name="retryOnNoRouteToCell" value="true" />
    </bean>

    <bean id="billing-stub" class="org.dcache.cells.CellStub">
        <description>Billing communication stub</description>
        <property name="destination" value="billing" />
        <property name="timeout" value="30000" />
    </bean>

    <bean id="pool-stub" class="org.dcache.cells.CellStub">
        <description>Pool communication stub</description>
        <property name="timeout" value="10000" />
    </bean>

    <bean id="list-handler" class="org.dcache.util.list.ListDirectoryHandler">
        <description>ListDirectoryHandler</description>
        <constructor-arg>
            <bean class="diskCacheV111.util.PnfsHandler">
                <constructor-arg ref="pnfs-stub" />
        </bean>
        </constructor-arg>
    </bean>

    <bean id="pool-manager-stub" class="org.dcache.cells.CellStub">
        <description>Communication stub for pool manager</description>
        <property name="destination" value="${poolmanager}" />
        <property name="timeout" value="30000" />
    </bean>

    <!-- JETTY CONFIG -->

    <context:annotation-config/>

    <context:component-scan base-package="org.snia.cdmiserver"/>
    <context:component-scan base-package="org.dcache.cdmi"/>

    <import resource="classpath:META-INF/cxf/cxf.xml"/>

    <httpj:engine-factory bus="cxf">
        <httpj:engine port="8543">
            <httpj:connector>
                <bean class="org.eclipse.jetty.server.bio.SocketConnector">
                    <property name = "port" value="8543" />
                </bean>
            </httpj:connector>
            <httpj:handlers>
                <bean class="org.eclipse.jetty.server.handler.DefaultHandler"/>
            </httpj:handlers>
        </httpj:engine>
    </httpj:engine-factory>

    <jaxrs:server id="cdmiService" address="http://localhost:8543/" depends-on="cxf"
                  beanNames="objectIdResource pathResource">
        <jaxrs:providers>
            <ref bean="badRequestExceptionMapper"/>
            <ref bean="conflictExceptionMapper"/>
            <ref bean="containerProvider"/>
            <ref bean="capabilityProvider"/>
            <ref bean="forbiddenExceptionMapper"/>
            <ref bean="notFoundExceptionMapper"/>
            <ref bean="unauthorizedExceptionMapper"/>
            <ref bean="unsupportedOperationExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:serviceBeans>
            <ref bean="objectIdResource"/>
            <ref bean="pathResource"/>
            <ref bean="capabilityResource"/>
        </jaxrs:serviceBeans>
    </jaxrs:server>

    <bean id="objectIdResource"              class="org.snia.cdmiserver.resource.ObjectIdResource"
                                             scope="prototype">
        <property name="dataObjectDao" ref="dataObjectDao"/>
    </bean>

    <bean id="capabilityResource"            class="org.snia.cdmiserver.resource.CapabilityResource"
                                             scope="prototype">
         <property name="capabilityDao" ref="capabilityDao"/>
    </bean>
    <bean id="pathResource"                  class="org.dcache.cdmi.resource.DCachePathResource"
                                             scope="prototype">
        <property name="containerDao" ref="containerDao"/>
        <property name="dataObjectDao" ref="dataObjectDao"/>
    </bean>

    <bean id="badRequestExceptionMapper"     class="org.snia.cdmiserver.provider.BadRequestExceptionMapper"/>
    <bean id="conflictExceptionMapper"       class="org.snia.cdmiserver.provider.ConflictExceptionMapper"/>
    <bean id="containerProvider"             class="org.snia.cdmiserver.provider.ContainerProvider"/>
    <bean id="capabilityProvider"            class="org.snia.cdmiserver.provider.CapabilityProvider"/>
    <bean id="forbiddenExceptionMapper"      class="org.snia.cdmiserver.provider.ForbiddenExceptionMapper"/>
    <bean id="notFoundExceptionMapper"       class="org.snia.cdmiserver.provider.NotFoundExceptionMapper"/>
    <bean id="unauthorizedExceptionMapper"   class="org.snia.cdmiserver.provider.UnauthorizedExceptionMapper"/>
    <bean id="unsupportedOperationExceptionMapper"
                                             class="org.snia.cdmiserver.provider.UnsupportedOperationExceptionMapper"/>

    <bean id="containerDao" class="org.dcache.cdmi.dao.impl.DCacheContainerDaoImpl">
        <property name="baseDirectoryName" value="/disk"/>
        <property name="recreate" value="false"/>
        <property name="pnfsStub" ref="pnfs-stub"/>
        <property name="listDirectoryHandler" ref="list-handler"/>
        <property name="poolMgrStub" ref="pool-manager-stub"/>
        <property name="poolStub" ref="pool-stub"/>
        <property name="billingStub" ref="billing-stub"/>
    </bean>

    <bean id="dataObjectDao" class="org.dcache.cdmi.dao.impl.DCacheDataObjectDaoImpl">
        <property name="baseDirectoryName" value="/disk"/>
        <property name="containerDao" ref="containerDao"/>
        <property name="pnfsStub" ref="pnfs-stub"/>
        <property name="listDirectoryHandler" ref="list-handler"/>
        <property name="poolMgrStub" ref="pool-manager-stub"/>
        <property name="poolStub" ref="pool-stub"/>
        <property name="billingStub" ref="billing-stub"/>
    </bean>

    <bean id="capabilityDao" class="org.dcache.cdmi.dao.impl.DCacheCapabilityDaoImpl"/>

</beans>
