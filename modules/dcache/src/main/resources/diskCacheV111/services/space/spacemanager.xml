<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context.xsd">

  <context:property-placeholder/>
  <context:annotation-config/>

    <bean id="executor"
          class="org.dcache.util.BoundedExecutor"
          destroy-method="shutdown">
        <description>Thread pool for message processing</description>
        <constructor-arg>
            <bean class="java.util.concurrent.Executors"
                  factory-method="newCachedThreadPool"
                  destroy-method="shutdown">
            </bean>
        </constructor-arg>
        <constructor-arg value="${spacemanager.limits.threads}"/>
    </bean>

  <bean id="pool-manager-stub" class="org.dcache.cells.CellStub">
    <description>Pool manager communication stub</description>
    <property name="destination" value="${srm.service.poolmanager}"/>
    <property name="timeout" value="${srm.service.poolmanager.timeout}"/>
    <property name="timeoutUnit" value="${srm.service.poolmanager.timeout.unit}"/>
  </bean>

  <bean id="pool-monitor" class="org.dcache.poolmanager.RemotePoolMonitorFactoryBean">
    <description>Maintains runtime information about all pools</description>
    <property name="poolManagerStub" ref="pool-manager-stub"/>
  </bean>

  <bean id="pnfs-stub" class="org.dcache.cells.CellStub">
    <description>PNFS manager communication stub</description>
    <property name="destination" value="${srm.service.pnfsmanager}"/>
    <property name="timeout" value="${srm.service.pnfsmanager.timeout}"/>
    <property name="timeoutUnit" value="${srm.service.pnfsmanager.timeout.unit}"/>
    <property name="retryOnNoRouteToCell" value="true"/>
  </bean>

  <bean id="pnfs" class="diskCacheV111.util.PnfsHandler">
    <description>PNFS manager client module</description>
    <constructor-arg ref="pnfs-stub"/>
  </bean>

    <bean id="data-source-delegate" class="com.zaxxer.hikari.HikariDataSource"
            destroy-method="shutdown">
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <constructor-arg type="java.util.Properties">
                    <value>
                        minimumIdle = ${spacemanager.db.connections.idle}
                        maximumPoolSize = ${spacemanager.db.connections.max}
                        autoCommit = true
                        transactionIsolation = TRANSACTION_READ_COMMITTED
                    </value>
                </constructor-arg>
                <property name="dataSource">
                    <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                        <property name="url" value="${spacemanager.db.url}"/>
                        <property name="username" value="${spacemanager.db.user}"/>
                        <property name="password" value="#{ T(diskCacheV111.util.Pgpass).getPassword('${spacemanager.db.password.file}', '${spacemanager.db.url}', '${spacemanager.db.user}', '${spacemanager.db.password}') }"/>
                    </bean>
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="data-source" class="org.dcache.db.AlarmEnabledDataSource" destroy-method="shutdown">
            <description>Connection pool decorator</description>
            <constructor-arg value="${spacemanager.db.url}"/>
            <constructor-arg value="SpaceManager"/>
            <constructor-arg ref="data-source-delegate"/>
    </bean>

    <bean id="liquibase" class="org.dcache.util.SpringLiquibase">
        <description>Database schema manager</description>
        <property name="dataSource" ref="data-source-delegate"/>
        <property name="changeLog" value="classpath:${spacemanager.db.schema.changelog}"/>
        <property name="shouldUpdate" value="${spacemanager.db.schema.auto}"/>
    </bean>

  <bean id="tx-manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <description>Database transaction manager</description>
        <property name="dataSource" ref="data-source"/>
  </bean>

  <bean class="org.dcache.util.aspects.PerInstanceAnnotationTransactionBeanPostProcessor">
    <property name="transactionManager" ref="tx-manager"/>
  </bean>

  <bean id="authz-policy" class="diskCacheV111.services.space.SimpleSpaceManagerAuthorizationPolicy"/>

  <bean id="database" class="diskCacheV111.services.space.JdbcSpaceManagerDatabase"
        init-method="init" depends-on="liquibase">
      <property name="dataSource" ref="data-source"/>
  </bean>

  <bean id="linkgroup-loader" class="diskCacheV111.services.space.LinkGroupLoader"
      init-method="start" destroy-method="stop">
    <property name="database" ref="database"/>
    <property name="poolMonitor" ref="pool-monitor"/>
    <property name="updateLinkGroupsPeriod"
              value="#{T(java.util.concurrent.TimeUnit).MILLISECONDS.convert(
                     ${spacemanager.link-groups-update.period},
                    '${spacemanager.link-groups-update.period.unit}')}" />
    <property name="authorizationFileName" value="${spacemanager.authz.link-group-file-name}" />
  </bean>

  <bean id="cli" class="diskCacheV111.services.space.SpaceManagerCommandLineInterface">
    <property name="database" ref="database"/>
    <property name="defaultRetentionPolicy" value="#{T(diskCacheV111.util.RetentionPolicy).getRetentionPolicy('${spacemanager.default-retention-policy}')}" />
    <property name="defaultAccessLatency" value="#{T(diskCacheV111.util.AccessLatency).getAccessLatency('${spacemanager.default-access-latency}')}" />
    <property name="linkGroupLoader" ref="linkgroup-loader"/>
    <property name="pnfs" ref="pnfs"/>
    <property name="executor" ref="executor"/>
  </bean>

  <bean id="spacemanager" class="diskCacheV111.services.space.SpaceManagerService"
         init-method="start" destroy-method="stop">
    <description>SrmSpaceManager</description>
    <property name="database" ref="database"/>
    <property name="linkGroupLoader" ref="linkgroup-loader"/>
    <property name="pnfsHandler" ref="pnfs"/>
    <property name="poolManager" value="${srm.service.poolmanager}"/>
    <property name="poolMonitor" ref="pool-monitor"/>
    <property name="executor" ref="executor"/>
    <property name="perishedSpacePurgeDelay"
              value="#{T(java.util.concurrent.TimeUnit).MILLISECONDS.convert(
                     ${spacemanager.perished-space-purge-delay},
                     '${spacemanager.perished-space-purge-delay.unit}')}" />
    <property name="spaceManagerEnabled"
              value="${spacemanager.enable.space-reservation}" />
    <property name="expireSpaceReservationsPeriod"
              value="#{T(java.util.concurrent.TimeUnit).MILLISECONDS.convert(
                     ${spacemanager.expire-space-reservation.period},
                     '${spacemanager.expire-space-reservation.period.unit}')}" />
    <property name="defaultAccessLatency" value="#{T(diskCacheV111.util.AccessLatency).getAccessLatency('${spacemanager.default-access-latency}')}" />
    <property name="allowUnreservedUploadsToLinkGroups" value="${spacemanager.enable.unreserved-uploads-to-linkgroups}" />
    <property name="shouldDeleteStoredFileRecord" value="false" />
    <property name="shouldReturnFlushedSpaceToReservation" value="true" />
    <property name="authorizationPolicy" ref="authz-policy" />
  </bean>

</beans>
