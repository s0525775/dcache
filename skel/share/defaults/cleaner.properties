#  -----------------------------------------------------------------------
#     Default values for Cleaner
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@
#
#  The cleaner is the component that watches for files being deleted
#  in the namespace.  There must be at most one cleaner per dCache
#  instance.  When files are deleted, the cleaner will notify the
#  pools that hold a copy of the deleted files' data and tell the
#  pools to remove that data.  Optionally, the cleaner can instruct
#  HSM-attached pools to remove copies of the file's data stored on
#  tape.
#
#  The cleaner runs periodically, so there may be a delay between a
#  file being deleted in the namespace and the corresponding deletion
#  of that file's data in pools and on tape.
#
#  The cleaner maintains a list of pools that it was unable to
#  contact: pools are either offline or sufficiently overloaded that
#  they couldn't respond in time.  The cleaner will periodically try
#  to delete data on pools in this list but, between such retries,
#  these pools are excluded from cleaner activity.

# Cell name
cleaner.cell.name=cleaner

# Whether to publish the cell name as a well known cell
(one-of?true|false)cleaner.cell.export=true

#  ---- Cleaner thread count
#
#  The number of threads in the cleaner's thread-pool.  This
#  thread-pool is used for all cleaner activity.
#
(deprecated)cleaner.thread-pool.size = 5
cleaner.limits.threads = ${cleaner.thread-pool.size}

#  ---- Period of successive run
#
#  The time between successive cleaner runs.
#
(deprecated)cleaner.period = 120
cleaner.limits.period = ${cleaner.period}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)cleaner.limits.period.unit = SECONDS

#  ---- Pool communication time-out
#
#  The time that the cleaner will wait after sending a message to
#  a pool for that pool's reply.  If no reply is received in time
#  then the cleaner places this pool in the offline pools list.
#
(deprecated)cleaner.pool-reply-timeout = 100
cleaner.service.pool.timeout = ${cleaner.pool-reply-timeout}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)cleaner.service.pool.timeout.unit = SECONDS

#  ---- Unavailable pool retry time
#
#  The time between successive attempts to clean files from a pool
#  should the pool fail to respond to cleaner requests.
#
(deprecated)cleaner.pool-retry = 1800
cleaner.service.pool.retry-period = ${cleaner.pool-retry}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)cleaner.service.pool.retry-period.unit = SECONDS

#  ---- Cell address of broadcast service
cleaner.service.broadcast=${dcache.service.broadcast}

#  ---- Report to cell
#
#  The cleaner will send a message indicating that files' data have
#  been removed from pools.  If the cleaner.destination.remove-notification
#  property is empty then no messages are sent. Otherwise this
#  property contains the address of the cell these messages should be
#  sent to.
#
(deprecated)cleaner.report-cell=${cleaner.service.broadcast}
cleaner.destination.remove-notification=${cleaner.report-cell}

#  ---- Maximum files in one message
#
#  For each pool, the cleaner produces a list of all deleted files
#  that have data stored on that pool.  When instructing a pool to
#  remove data, the cleaner includes as many files as possible in the
#  message.
#
#  The cleaner.max-files-in-message property places an upper
#  limit on the number of files' data to be deleted in a message.  If
#  more than this number of files are to be deleted then the pool will
#  receive multiple messages.
#
(deprecated)cleaner.max-files-in-message = 500
cleaner.limits.batch-size = ${cleaner.max-files-in-message}

#  ---- HSM cleaner enabled
#
#  If 'enabled' then the cleaner will instruct an HSM-attached pool to
#  remove a deleted files' data stored in the HSM.
#
#  To enable this feature, the property must be enabled at all the
#  pools that are supposed to delete files from an HSM.
#
(deprecated,one-of?enabled|disabled)cleaner.hsm = enabled
(one-of?true|false|${cleaner.enable.hsm-when-${cleaner.hsm}})\
cleaner.enable.hsm = ${cleaner.enable.hsm-when-${cleaner.hsm}}
(immutable)cleaner.enable.hsm-when-enabled = true
(immutable)cleaner.enable.hsm-when-disabled = false

#  ---- HSM cleaner maximum requests
#
#  As with messages send to pools to remove deleted files' data stored
#  on the pool, the cleaner will group together multiple deleted files
#  that had data stored on the HSM and that may be deleted by the same
#  pool.  The cleaner.hsm.max-files-in-message property places
#  an upper limit on the number of files a message may contain.
#
(deprecated)cleaner.hsm.max-files-in-message = 100
cleaner.limits.hsm-batch-size = ${cleaner.hsm.max-files-in-message}

#  ---- HSM-deleting message communication timeout
#
#  Files are cleaned from an HSM by the cleaner sending a message to
#  an HSM-attached pool.  The pool replies with a confirmation
#  message.  This property specifies the timeout the cleaner adopts
#  while waiting for the reply after which the operation is considered
#  to have failed.
#
(deprecated)cleaner.hsm.pool-reply-timeout = 120
cleaner.service.pool.hsm-timeout = ${cleaner.hsm.pool-reply-timeout}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)cleaner.service.pool.hsm-timeout.unit = SECONDS


#
# Database related settings. Reserved for internal use.
#
cleaner.db.host=${chimera.db.host}
cleaner.db.name=${chimera.db.name}
cleaner.db.user=${chimera.db.user}
cleaner.db.password=${chimera.db.password}
cleaner.db.url=${chimera.db.url}
(immutable)cleaner.db.schema.auto=false

(obsolete)cleaner.db.driver = The property is not needed with JDBC 4 drivers
