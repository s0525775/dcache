#  -----------------------------------------------------------------------
#     Default values for httpd
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

httpd.cell.name=httpd

#
#     Mirrored properties
#
httpd.service.billing=${dcache.service.billing}
httpd.service.loginbroker=${dcache.service.loginbroker}
httpd.service.gplazma=${dcache.service.gplazma}
httpd.service.pnfsmanager=${dcache.service.pnfsmanager}
httpd.service.poolmanager=${dcache.service.poolmanager}
httpd.enable.space-reservation=${dcache.enable.space-reservation}

(deprecated)httpdPort=2288
httpd.net.port=${httpdPort}

#
#     For authenticated pages (all admin pages in the webadmin servlet are
#     only available in authenticated mode).
#
(deprecated,one-of?true|false)authenticated=false
(one-of?true|false|${authenticated})httpd.enable.authn=${authenticated}

#
#     Specifies the host for the connector;
#     see further comments for dcache.net.listen in dcache.properties
#
httpd.net.listen=${dcache.net.listen}

#
#     Specifies the TCP port on which the cell accepts https connections.
#
(deprecated)httpsPort=8444
httpd.net.https-port=${httpsPort}

#  ---- Server certificate
#
#   This parameter specifies the path to the file containing the
#   PKCS12 encoded server certificate. When using https as the
#   webdav.authn.protocol, the host certificate in /etc/grid-security/ needs
#   to be converted to PKCS12 format before it can be used with the
#   WebDAV door. Use the 'bin/dcache import hostcert' command to
#   perform this task.
#
httpd.authn.keystore=${dcache.authn.keystore}

#  ---- Password for server certificate
#
#   This parameter specifies the password with which the PKCS12 encoded
#   server certificate is encrypted.
#
httpd.authn.keystore.password=${dcache.authn.keystore.password}

#  ---- Trusted CA certificates
#
#   This parameter specifies the path to a Java Keystore containing
#   the the trusted CA certicates used by the WebDAV door. When using
#   https as the webdav.authn.protocol, the CA certificates in
#   /etc/grid-security/certificates/ need to be converted into a Java
#   Keystore file before they can be used with the WebDAV door. Use
#   the 'bin/dcache import cacerts' command to perform this task.
#
httpd.authn.truststore=${dcache.authn.truststore}

#  ---- Password for trusted CA certificates
#
#   This parameter specifies the password with which the Java Keystore
#   containing the trusted CA certificates is encrypted.
#
httpd.authn.truststore.password=${dcache.authn.truststore.password}

#
#     When a user has this GID he can become an Admin for webadmininterface
#
(deprecated)webadminAdminGid=0
httpd.authz.admin-gid=${webadminAdminGid}

#
#     Security related properties
#
(deprecated)httpd.security.ciphers=${dcache.authn.ciphers}
httpd.authn.ciphers=${httpd.security.ciphers}

#
#     The following variables specify the absolute location of static
#     content exposed by the dCache-internal web server.
#
httpd.static-content.dir=${dcache.paths.share}/httpd/static
httpd.static-content.scripts=${httpd.static-content.dir}/scripts
httpd.static-content.docs=${httpd.static-content.dir}/docs
httpd.static-content.images=${httpd.static-content.dir}/images
httpd.static-content.styles=${httpd.static-content.dir}/styles
httpd.static-content.index=${httpd.static-content.dir}/index.html

#
#     Where to write plot image files
#
httpd.static-content.plots=@httpd.static-content.plots@

#
#     Specifies maximum idle time on a connection.
#
(deprecated)httpdMaxIdleTimeInMs=30000
httpd.limits.idle-time=${httpdMaxIdleTimeInMs}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)httpd.limits.idle-time.unit=MILLISECONDS

#
#     Specifies maximum number of active threads for the service.
#
(deprecated)httpdMaxThreads=100
httpd.limits.threads=${httpdMaxThreads}

#
#     Specifies the resource path to the default XML file for webapps.
#
(deprecated)httpdDefaultWebapp=/org/dcache/admin/webadmin/jettycell/resources/webdefault.xml
httpd.container.default-webapp=${httpdDefaultWebapp}

#
#     Specifies the path containing .war files
#
(deprecated)webadminWebappsPath=${dcache.paths.classes}/webapps
httpd.container.webapps.dir=${webadminWebappsPath}

#
#     Specifies the path where the war files are unpacked
#
(deprecated)webadminWarunpackdir=${dcache.paths.unpack}
httpd.container.webapps.tmp-dir=${webadminWarunpackdir}

#
#     Name will be displayed on some of the webpages as header
#
(deprecated)webadminDCacheInstanceName=${host.name}
httpd.html.dcache-instance-name=${webadminDCacheInstanceName}

#
#     Connection timeout and sleep interval (period) value
#     for communication and data gathering
#
httpd.service.pool.timeout=4000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.pool.timeout.unit=MILLISECONDS
httpd.service.billing.timeout=60000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.billing.timeout.unit=MILLISECONDS
httpd.service.poolmonitor-collector.timeout=4000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.poolmonitor-collector.timeout.unit=MILLISECONDS
httpd.service.poolmonitor-collector.period=4000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.poolmonitor-collector.period.unit=MILLISECONDS
httpd.service.activetransfers-collector.timeout=5000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.activetransfers-collector.timeout.unit=MILLISECONDS
httpd.service.activetransfers-collector.period=60000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.activetransfers-collector.period.unit=MILLISECONDS
httpd.service.cellstatus-collector.timeout=5000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.cellstatus-collector.timeout.unit=MILLISECONDS
httpd.service.cellstatus-collector.period=10000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.cellstatus-collector.period.unit=MILLISECONDS
httpd.service.spacetoken-collector.timeout=5000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.spacetoken-collector.timeout.unit=MILLISECONDS
httpd.service.spacetoken-collector.period=10000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.spacetoken-collector.period.unit=MILLISECONDS
httpd.service.restorehandler-collector.timeout=5000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.restorehandler-collector.timeout.unit=MILLISECONDS
httpd.service.restorehandler-collector.period=10000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.restorehandler-collector.period.unit=MILLISECONDS

#  -----------------------------------------------------------------------
#     The following properties control a cleaner daemon responsible
#     for deleting stale alarm entries
#  -----------------------------------------------------------------------

#     Whether to run the thread which automatically removes closed alarms
#     older than a given threshold
#
(deprecated,one-of?true|false)webadmin.alarm.cleaner.enabled=false
(one-of?true|false|${webadmin.alarm.cleaner.enabled})httpd.enable.alarm-cleaner=${webadmin.alarm.cleaner.enabled}

#     Wait interval between successive sweeps of the cleanup daemon
#
(deprecated)webadmin.alarm.cleaner.timeout=168
httpd.alarm-cleaner.timeout=${webadmin.alarm.cleaner.timeout}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)httpd.alarm-cleaner.timeout.unit=HOURS

#     Interval prior to the current (wake-up) time to use in
#     determining which closed alarms to discard (all such alarms with a
#     timestamp < current - threshold will be deleted)
#
(deprecated)webadmin.alarm.cleaner.delete-threshold=336
httpd.alarm-cleaner.delete-entries-before=${webadmin.alarm.cleaner.delete-threshold}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)httpd.alarm-cleaner.delete-entries-before.unit=HOURS

#  -----------------------------------------------------------------------
#     The following properties control connection to the alarms storage/db
#  -----------------------------------------------------------------------

(deprecated)webadmin.alarm.dao.properties=${alarms.db.config.path}
(immutable)httpd.alarms.db.config.path=${webadmin.alarm.dao.properties}
(immutable)httpd.alarms.db.type=${alarms.db.type}
(immutable)httpd.alarms.db.xml.path=${alarms.db.xml.path}
(immutable)httpd.alarms.db.url=${alarms.db.url}
(immutable)httpd.alarms.db.user=${alarms.db.user}
(immutable)httpd.alarms.db.password=${alarms.db.password}
(immutable)httpd.alarms.definitions.path=${alarms.definitions.path}

#  -----------------------------------------------------------------------
#     The following properties control the creation of billing
#     histograms via callouts to the billing service
#  -----------------------------------------------------------------------

#     Whether to generate histograms or not (only if billingToDb=yes)
#
(deprecated,one-of?true|false)generatePlots=false
(one-of?true|false|${generatePlots})httpd.enable.plots.billing=${generatePlots}

#     Type of image file to produce (JAIDA property)
#
(deprecated)billingPlotsExportType=png
(one-of?gif|png|${billingPlotsExportType})httpd.plots.billing.type=${billingPlotsExportType}

#     Refresh the plots after this time interval
#
(deprecated)webadmin.billing-plot.refresh-threshold=5
httpd.plots.billing.refresh=${webadmin.billing-plot.refresh-threshold}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)httpd.plots.billing.refresh.unit=MINUTES

#     Height of the plot image in pixels
#
(deprecated)webadmin.billing-plot.height=800
httpd.plots.billing.height=${webadmin.billing-plot.height}

#     Width of the plot image in pixels
#
(deprecated)webadmin.billing-plot.width=1200
httpd.plots.billing.width=${webadmin.billing-plot.width}

#     The default style for the plots
#     connected draws a line between each data point
#     outline draws the first histogram as filled, the others as empty
#     filled draws all histograms as filled, and overlapping
#
(deprecated,one-of?CONNECTED|OUTLINE|FILLED)webadmin.billing-plot.default-style=CONNECTED
(one-of?CONNECTED|OUTLINE|FILLED|${webadmin.billing-plot.default-style})httpd.plots.billing.style=${webadmin.billing-plot.default-style}

#     The default scale for the plots (lin = linear, log = logarithmic)
#
(deprecated,one-of?lin|log)webadmin.billing-plot.default-scale=log
(one-of?lin|log|${webadmin.billing-plot.default-scale})httpd.plots.billing.scale=${webadmin.billing-plot.default-scale}

#  -----------------------------------------------------------------------
#     The following properties control the creation of pool queue
#     histograms via a round-robin database (org.rrd4j)
#  -----------------------------------------------------------------------

#     Turn on periodic pool queue information collection
#
(deprecated,one-of?true|false)poolqplots.enabled=false
(one-of?true|false|${poolqplots.enabled})httpd.enable.plots.pool-queue=${poolqplots.enabled}

#     How often the collection should be run (minimum)
#
(deprecated)poolqplots.refresh-interval=5
httpd.plots.pool-queue.refresh=${poolqplots.refresh-interval}
(deprecated,one-of?SECONDS|MINUTES|HOURS|DAYS)poolqplots.refresh-interval-unit=MINUTES
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS|${poolqplots.refresh-interval-unit})httpd.plots.pool-queue.refresh.unit=${poolqplots.refresh-interval-unit}

#     Round-robin database version number
#
(deprecated)poolqplots.rrdb.db.version=2
httpd.pool-queue.db.version=${poolqplots.rrdb.db.version}

#     The rrd4j heartbeat is the timespan (in seconds) which determines
#     whether a data value is valid and can be used to compute the
#     value at the current consolidation point.  If an update comes
#     after the heartbeat, the value for that point is considered unknown.
#     We compute the heartbeat on the basis of the step, multiplying it by
#     this factor.
#
(deprecated)poolqplots.rrdb.plot.heartbeat-factor=1.5
httpd.pool-queue.db.heartbeat-factor=${poolqplots.rrdb.plot.heartbeat-factor}

#     Type of image file to produce
#
(deprecated)poolqplots.rrdb.image-type=png
httpd.plots.pool-queue.type=${poolqplots.rrdb.image-type}

#     Height of the plot image in pixels
#
(deprecated)poolqplots.rrdb.plot.height=800
httpd.plots.pool-queue.height=${poolqplots.rrdb.plot.height}

#     Width of the plot image in pixels
#
(deprecated)poolqplots.rrdb.plot.width=1200
httpd.plots.pool-queue.width=${poolqplots.rrdb.plot.width}

#     How wide the histogram X-axis should be
#
(deprecated)poolqplots.rrdb.plot.span-size=15
httpd.plots.pool-queue.x-span=${poolqplots.rrdb.plot.span-size}

#     Unit for the histogram X-axis span calculation
#
(deprecated,one-of?MINUTES|HOURS|DAYS)poolqplots.rrdb.plot.span-unit=DAYS
(one-of?MINUTES|HOURS|DAYS|${poolqplots.rrdb.plot.span-unit})httpd.plots.pool-queue.x-span.unit=${poolqplots.rrdb.plot.span-unit}

#     The histogram X-axis minimum time step
#
(deprecated)poolqplots.rrdb.plot.step-size=5
httpd.plots.pool-queue.min-time-step=${poolqplots.rrdb.plot.step-size}

#     Unit for the histogram X-axis minimum time step
#
(deprecated,one-of?MINUTES|HOURS|DAYS)poolqplots.rrdb.plot.step-unit=MINUTES
(one-of?MINUTES|HOURS|DAYS|${poolqplots.rrdb.plot.step-unit})httpd.plots.pool-queue.min-time-step.unit=${poolqplots.rrdb.plot.step-unit}

#     Unit for placing X-axis major grid lines
#
(deprecated,one-of?MINUTES|HOURS|DAYS)poolqplots.rrdb.plot.major-unit=DAYS
(one-of?MINUTES|HOURS|DAYS|${poolqplots.rrdb.plot.major-unit})httpd.plots.pool-queue.major.unit=${poolqplots.rrdb.plot.major-unit}

#     Number of major grid units between major grid lines
#
(deprecated)poolqplots.rrdb.plot.major-unit-count=1
httpd.plots.pool-queue.grid.spacing.major=${poolqplots.rrdb.plot.major-unit-count}

#     Unit for placing X-axis minor grid lines
#     (set to be the same as major grid lines for less clutter)
#
(deprecated,one-of?MINUTES|HOURS|DAYS)poolqplots.rrdb.plot.minor-unit=DAYS
(one-of?MINUTES|HOURS|DAYS|${poolqplots.rrdb.plot.minor-unit})httpd.plots.pool-queue.minor.unit=${poolqplots.rrdb.plot.minor-unit}

#     Number of minor grid units between minor grid lines
#     (set to be the same as major grid lines for less clutter)
#
(deprecated)poolqplots.rrdb.plot.minor-unit-count=1
httpd.plots.pool-queue.grid.spacing.minor=${poolqplots.rrdb.plot.minor-unit-count}

#     Number of extra steps to show on the right margin
#
(deprecated)poolqplots.rrdb.plot.right-margin=3
httpd.plots.pool-queue.right-margin=${poolqplots.rrdb.plot.right-margin}

#     Label precision; if the format were exact, this would be 0, but since
#     the default unit is DAYS, we use 24 so that the label gets centered
#     at noon (12) rather than at midnight
#
(deprecated)poolqplots.rrdb.plot.label-span=24
httpd.plots.pool-queue.label-span=${poolqplots.rrdb.plot.label-span}

#     Unit for placing X-axis labels
#
(deprecated,one-of?MINUTES|HOURS|DAYS)poolqplots.rrdb.plot.label-unit=DAYS
(one-of?MINUTES|HOURS|DAYS|${poolqplots.rrdb.plot.label-unit})httpd.plots.pool-queue.label.unit=${poolqplots.rrdb.plot.label-unit}

#     Number of label units between X-axis labels
#
(deprecated)poolqplots.rrdb.plot.label-unit-count=2
httpd.plots.pool-queue.x-label.spacing=${poolqplots.rrdb.plot.label-unit-count}

#     Format for displaying the date/time as X-axis label.
#     This follows strftime conventions except that the '%' marker is not used
(deprecated)poolqplots.rrdb.plot.x-label-format=E MMM dd YYYY HH:mm
httpd.plots.pool-queue.x-label.format=${poolqplots.rrdb.plot.x-label-format}

#     Label which should appear on the Y-axis
#
(deprecated)poolqplots.rrdb.plot.y-label=Threads
httpd.plots.pool-queue.y-label=${poolqplots.rrdb.plot.y-label}


#  Location of statistics generated by statistics module
#
httpd.statistics.location=${statisticsLocation}

#
#      Document which TCP ports are opened
#
(immutable)httpd.net.ports.tcp.when-authenticated-is-false=${httpd.net.port}
(immutable)httpd.net.ports.tcp.when-authenticated-is-true=${httpd.net.port} ${httpd.net.https-port}
(immutable)httpd.net.ports.tcp=${httpd.net.ports.tcp.when-authenticated-is-${httpd.enable.authn}}

#
#      Obsolete and forbidden properties
#
(obsolete)httpdEnablePoolCollector=PoolCollector is now always enabled
(obsolete)httpd.static-content.plots.subdir=No longer used
(obsolete)collectorTimeout=use specific service timeout
(obsolete)transfersCollectorUpdate=no longer used
(forbidden)images=use httpd.static-content.images instead
(forbidden)styles=use httpd.static-content.styles instead
(forbidden)webadminAuthenticated = use httpd.enable.authn instead
(forbidden)webadminHttpPort = use httpd.net.port instead
(forbidden)webadminHttpsPort = use httpd.net.https-port instead
(obsolete)httpd.alarms.db.driver=The property is not needed with JDBC 4 drivers
