#  -----------------------------------------------------------------------
#     Default values for xrootd
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

#  ---- Cell name of Xrootd door
#
xrootd.cell.name=Xrootd-${host.name}

#  ---- Whether to export the xrootd cell as a well known cell
#
#  This property controls whether the xrootd cell is published as
#  a well known cell. Well known cells are addressable through their
#  cell name, while other cells are only addressable from other domains
#  using their fully qualified cell address.
(one-of?true|false)xrootd.cell.export=true

#  ---- TCP address and port to bind to
#
#   Specifies the TCP port and address on which the Xrootd door accepts connections.
#
(deprecated)xrootdPort=1094
xrootd.net.port=${xrootdPort}
xrootd.net.listen=${dcache.net.listen}

#  ---- TCP backlog used by xrootd
#
#   1024 is typically the largest value allowed by the OS.
#
(deprecated)xrootdBacklog=1024
xrootd.net.backlog=${xrootdBacklog}

#  ---- Worker thread limit
#
#   Maximum number of work threads used by the door. Since the worker
#   threads block on name space and pool manager operations, a
#   relatively large value is needed.
#
(deprecated)xrootdThreads=1000
xrootd.limits.threads=${xrootdThreads}

#  ---- Queue memory limit
#
#   Memory limit in bytes for xrootd frames queued for processing by a
#   worker thread.
#
(deprecated)xrootdMaxTotalMemorySize=16777216
xrootd.max-total-memory-size=${xrootdMaxTotalMemorySize}

#  ---- Per connection queue memory limit
#
#   Per connection memory limit in bytes for xrootd frames queued for
#   processing by a worker thread.
#
(deprecated)xrootdMaxChannelMemorySize=16777216
xrootd.max-channel-memory-size=${xrootdMaxChannelMemorySize}

# Whether space reservations are supported
(one-of?true|false|${dcache.enable.space-reservation})xrootd.enable.space-reservation=${dcache.enable.space-reservation}

# Cell address of poolmanager service
xrootd.service.poolmanager=${xrootd.service.poolmanager-space-${xrootd.enable.space-reservation}}
(immutable)xrootd.service.poolmanager-space-false=${dcache.service.poolmanager}
(immutable)xrootd.service.poolmanager-space-true=${dcache.service.spacemanager}

# Timeout for poolmanager requests
(deprecated)xrootdPoolManagerTimeout=5400000
xrootd.service.poolmanager.timeout=${xrootdPoolManagerTimeout}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)xrootd.service.poolmanager.timeout.unit=MILLISECONDS

# Cell address of pnfsmanager service
xrootd.service.pnfsmanager=${dcache.service.pnfsmanager}

# Cell address of gplazma service
xrootd.service.gplazma=${dcache.service.gplazma}

# Timeout for gplazma requests
xrootd.service.gplazma.timeout=30
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)xrootd.service.gplazma.timeout.unit=SECONDS

# Cell address of billing service
xrootd.service.billing=${dcache.service.billing}

# Cell address of loginbroker to register with
xrootd.service.loginbroker=${dcache.service.loginbroker}

# Information for loginbroker registration
xrootd.service.loginbroker.update-period=${dcache.service.loginbroker.update-period}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS|${dcache.service.loginbroker.update-period.unit})\
  xrootd.service.loginbroker.update-period.unit=${dcache.service.loginbroker.update-period.unit}
xrootd.service.loginbroker.update-threshold=${dcache.service.loginbroker.update-threshold}
xrootd.service.loginbroker.version=2.4
xrootd.service.loginbroker.family=root

# Timeout for pool communication
(deprecated)xrootdPoolTimeout=15000
xrootd.service.pool.timeout=${xrootdPoolTimeout}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)xrootd.service.pool.timeout.unit=MILLISECONDS

#  ---- Root path of Xrootd door
#
#   Specifies the root directory exposed through the Xrootd door.
#
(deprecated)xrootdRootPath=/
xrootd.root=${xrootdRootPath}

#  ---- Allowed paths
#
#   These parameters are set to the absolute paths of directories
#   accessible through Xrootd. Multiple directories are separated by a
#   colon. Different directories may be specified for reads and
#   writes. An empty list will disallow access to all directories.
#
(deprecated)xrootdAllowedReadPaths=/
(deprecated)xrootdAllowedWritePaths=
xrootd.authz.read-paths=${xrootdAllowedReadPaths}
xrootd.authz.write-paths=${xrootdAllowedWritePaths}

#  ---- Xrootd plugins
#
#   Comma seperated list of plugins to inject into the xrootd
#   request processing chain.
#
#   dCache ships with a few authentication and authorization plugins:
#
#    gplazma:none - no authentication is performed; user identity is
#                   set to the value of xrootdUser (door only).
#
#    gplazma:gsi  - any xrootd request to the door will use a key-exchange
#                   process to identify the end-user (door only).
#
#    authz:alice-token - ALICE token based authorization plugin.
#
#   A gplazma:* authentication plugin is required; use
#   gplazma:none if no authentication is desired. Authorization plugins
#   have to be placed after the authentication plugin.
#
#   Third party plugins can be used by adding the plugin to the plugin
#   directory of dCache and specifying the plugin name here. Note that
#   third party authentication plugins have to be loaded with
#   gplazma:<plugin>.
#
xrootd.plugins=gplazma:none,authz:none

#  ---- User identity used for authorizing operations
#
#   As xrootd requests are not authenticated, an identity has to be
#   chosen for authorizing operations. All operations are performed as
#   this identity.
#
#   The authorization controlled by this parameter is different from
#   the authorization performed by the authorization plugin: The
#   authorization plugin validates the requests themselves
#   indepedently of the file which is accessed. E.g. the token based
#   authorization verifies that the request contains a
#   cryptopgrahically signed token from a trusted source.
#
#   Once the request is authorized it is subject to further
#   authorization by other components in dCache, e.g. PnfsManager or
#   PoolManager. Those authorizations happen wrt. the identity defined
#   by xrootd.authz.user.
#
#   The default is 'nobody', meaning that only world-permissible
#   operations are allowed. Other valid values are 'root' (no further
#   authorization) and a string on the form UID:GID[,GID...], i.e. a
#   numerical UID followed by one or more numerical GIDs. The first
#   GID is the primary one.
#
(deprecated)xrootdUser=nobody
xrootd.authz.user=${xrootdUser}

#  ---- Upload directory
#
#   The xrootd door restricts access to the user's root directory (as defined
#   by gPlazma). The upload directory is an exception to this rule. The directory
#   is typically used by SRM for uploading files.
#
xrootd.authz.upload-directory=${dcache.upload-directory}


#  ---- Mover queue
#
#   The mover queue on the pool to which this request will be
#   scheduled.
#
(deprecated)xrootdIoQueue=
xrootd.mover.queue=${xrootdIoQueue}

#  ---- Mover queue timeout
#
#   Specifies the timeout in milliseconds after which the xrootd door
#   gives up on waiting for a mover to start. This places a bound on
#   the maximum mover queue time.
#
(deprecated)xrootdMoverTimeout=180000
xrootd.mover.timeout=${xrootdMoverTimeout}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)xrootd.mover.timeout.unit=MILLISECONDS


#
#   Document which TCP ports are opened
#
(immutable)xrootd.net.ports.tcp = ${xrootd.net.port}

# Old properties
(forbidden)xrootdIsReadOnly=Use xrootd.authz.write-paths
(forbidden)xrootdAllowedPaths=Use xrootd.auths.read-paths and xrootd.authz.write-paths
(forbidden)xrootdPlugins=Use xrootd.plugins and pool.mover.xrootd.plugins
